" vim: fdm=marker
" Author Andreas Louv <andreas@louv.dk>

" Options {{{1

filetype plugin indent on
syntax enable
set synmaxcol=200

set history=10000
set hidden
set visualbell belloff=wildmode
set backspace=indent,eol,start
set nrformats-=octal
set notitle

set undofile undodir^=~/.vim/undo//
set directory^=~/.vim/swap//

set listchars+=tab:\|\ 

augroup ColorChg
  au!
  au ColorScheme nofrils-* hi rpgleString term=italic cterm=italic gui=italic
  au ColorScheme nofrils-* hi link User1 StatusLineTermNC
  au ColorScheme nofrils-* hi link User2 PmenuSel
augroup END
let g:nofrils_heavylinenumbers = 1
colorscheme nofrils-dark

" Searching, Navigating and Compiling Files {{{1

setglobal ignorecase smartcase hlsearch incsearch
setglobal path+=**
setglobal grepprg=grep\ -nH\ --exclude={\\*.o,tags,js.tags,html.tags}
                     \\ --exclude-dir={node_modules,.git}
                     \\ $*

nnoremap gb :ls<cr>:b<space>
nnoremap <silent> <C-l> :noh<cr>:call clearmatches()<cr><C-l>

nnoremap 1gh :Hi1<Cr>
nnoremap gh :Hi1<Cr>
nnoremap 2gh :Hi2<Cr>

" Enhanced % {{{2

packadd! matchit

" Spelling {{{1

set spellfile=~/.vim/spell.utf-8.add

" Completion {{{1

set wildmenu
set wildmode=list:longest
set wildignorecase
set suffixes^=,			" Files without extension
set suffixes-=.h
set completeopt-=preview

" Dummy files to keep "make(1)" happy
set wildignore=*.srvpgm,*.pgm,*.mod,*.bnddir

" Wrapping {{{1

" Why can't I set "nowrap" nor "textwidth" with "setglobal",
" "/usr/share/vim/vimfiles/archlinux.vim" doesn't set them.
set nowrap
set textwidth=80
set formatoptions+=jo
set formatoptions-=t

" Abbreviations {{{1

inoreabbrev <al@ <andreas@louv.dk
inoreabbrev al@ andreas@louv.dk
inoreabbrev <and@ <and@sitemule.com
inoreabbrev and@ and@sitemule.com

" Commands {{{1

command! ColorColumn let &l:colorcolumn = &l:colorcolumn == '' ? '+0' : ''
command! Syntax      echo synIDattr(synID(line('.'), col('.'), 0), 'name')

command! -nargs=? Hi1 :call dw#highlight#String('User1', <q-args>)
command! -nargs=? Hi2 :call dw#highlight#String('User2', <q-args>)

command! -range=% TR let b:wv = winsaveview() |
                   \ keeppattern <line1>,<line2>s/\\\@<!\s\+$// |
                   \ call winrestview(b:wv)

command! -bang Bump :call dw#version#Bump(<bang>0)

" Folding {{{1

setglobal foldopen-=block
" Automatic set foldmethod to manual when entering insert mode, this is done
" to prevent vim from unfolding automatic folds, when the code changes.
augroup LazyFolds
  autocmd!
  autocmd InsertEnter,WinLeave * :call <SID>LazyFolds(1)
  autocmd InsertLeave,WinEnter * :call <SID>LazyFolds(0)
augroup END

function! s:LazyFolds(enter) abort
  if a:enter
    let &l:foldmethod = get(b:, 'lazy_foldmethod', &foldmethod)
  else
    let b:lazy_foldmethod=&foldmethod
    setlocal foldmethod=manual
  endif
endfunction

" FileType Detect {{{1

augroup FT_Detect
  autocmd!
  autocmd BufNewFile,BufRead *.{xjson,xpd,ns,dmd,lib} setlocal filetype=json
  autocmd BufNewFile,BufRead *.as[pm]x setlocal filetype=rpgle
  autocmd BufNewFile,BufRead *.qdmd setlocal filetype=qdmd
  autocmd BufNewFile,BufRead *.ts setlocal filetype=javascript.typescript
augroup END

" UndotreeToggle {{{1

let g:undotree_SetFocusWhenToggle = 1
