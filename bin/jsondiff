#!/bin/sh
# Diff two JSON files, by first sorting them on the keys, all but the last two
# options are send as arguments to `diff'
#
# Usage:
#	jsondiff [diff options] file1 file2
# Example for git like difference where one file is from standard input:
#	json_output | jsondiff -u file1 - | less
#
# Author: Andreas Louv <andreas@louv.dk>
# Version: 0.2

if test $# -lt 2
then
	>&2 printf 'Usage: %s [diff options] file1 file2\n' "${0##*/}"
	exit 1
fi

is_first=1
for arg
do
	if test "$is_first" -eq 1
	then
		set -- # Diff args
		is_first=0
	fi

	if [ "$pp" ]
	then
		set -- "$@" "$pp"
	fi
	pp=$p
	p=$arg
done

file_a="/tmp/$$.$(printf "%s\n" "$pp" | sed "s/\//:/g")"
file_b="/tmp/$$.$(printf "%s\n" "$p" | sed "s/\//:/g")"
trap 'rm "$file_a" "$file_b" 2> /dev/null' EXIT INT

if ! jq --sort-keys . -- "$pp" > "$file_a"
then
	exit 1
fi
if ! jq --sort-keys . -- "$p" > "$file_b"
then
	exit 1
fi
diff "$@" "$file_a" "$file_b"
