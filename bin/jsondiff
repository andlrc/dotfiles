#!/bin/bash
# Diff two JSON files, by first sorting them on the keys, all but the last two
# options are send as arguments to `diff'
#
# Usage:
#	jsondiff [diff options] file1 file2
# Example for git like difference where one file is from standard input:
#	json_output | jsondiff -u file1 - | less
#
# Author: Andreas Louv <andreas@louv.dk>
# Version: 0.3

files_only=0
files=()
opts=()
for arg
do
	if [[ "$files_only" -eq 0 && "${arg:0:1}" == "-" ]]
	then
		if [[ "${arg:1:1}" == "-" ]]
		then
			files_only=1
			continue
		fi

		opts+=("$arg")
	else
		files+=("$arg")

	fi
done

if [[ "${#files[@]}" -ne 2 ]]
then
	>&2 printf 'Usage: %s [diff options] file1 file2\n' "${0##*/}"
	exit 1
fi

file_a="/tmp/$$.$(printf "%s\\n" "${files[0]}" | sed "s:/:%:g")"
file_b="/tmp/$$.$(printf "%s\\n" "${files[1]}" | sed "s:/:%:g")"
trap 'rm "$file_a" "$file_b" 2> /dev/null' EXIT INT

if ! jq --sort-keys . -- "${files[0]}" > "$file_a"
then
	exit 1
fi

if ! jq --sort-keys . -- "${files[0]}" > "$file_b"
then
	exit 1
fi

diff "${opts[@]}" "$file_a" "$file_b"
