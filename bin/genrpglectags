#!/bin/sh
# Usage:	genrpglectags { -h | -V | { -p project | -c } [ -g ] }
# Version:	0.6
# Author:	Andreas Louv <andreas@louv.dk>

pgm=${0##*/}
version=0.6
usage='{ -h | -V | { -p project | -c } [ -g ] }'

project=""
gen_all=0

print_help()
{
	cat << HELP
Usage $pgm $usage

  -c         Search CWD for project
  -g         Generate the whole tags file
  -p project Specify project

  -V         Show version information
  -h         Show this help and exit
HELP
}

gen_tags()
{
	dir=$1; shift
	file_globs="*.rpgle *.aspx *.asmx *.rpgleinc"
	cd "$dir" || return 1
	>&2 printf "Generating tags in '%s'\n" "$dir"

	if test "$gen_all" -gt 0 || ! test -e tags
	then
		>&2 printf "Generate all tags\n"
		set -- # All files
		for file in $file_globs
		do
			test -e "$file" || continue
			set -- "$@" "$file"
		done
		rpglectags "$@" < /dev/null
	else
		tags_stat=$(stat -c %Y tags)
		set -- # Modified
		>&2 printf "Partial generation, 'stat tags' = %d\n" \
			   "$tags_stat"
		for file in $file_globs
		do
			test -e "$file" || continue
			file_stat=$(stat -c %Y "$file")
			if test "$file_stat" -ge "$tags_stat"
			then
				set -- "$@" "$file"
				>&2 printf "%s is modified\n" "$file"
			fi
		done

		if test "$#" -gt 0
		then
			tagstmp=$(mktemp)
			moditmp=$(mktemp)
			printf "%s\n" "$@" > "$moditmp"
			awk -F'\t' \
			    'FILENAME != "tags" { modified[$0]++; next }
			     !modified[$2]' \
			     "$moditmp" tags > "$tagstmp"
			mv "$tagstmp" tags
			rm "$moditmp"

			rpglectags -a "$@" < /dev/null
		fi
	fi
}

while getopts "hVcgp:" opt
do
	case $opt in
		h)
			print_help
			exit 0
			;;
		V)
			printf "%s %s\n" "$pgm" "$version"
			exit 0
			;;
		c)
			project=$(pwd |
			sed 's=^.*/\([^/]*\)/[^/]*/services.*=\1=p;d')
			if test -z "$project"
			then
				>&2 printf "%s: unknown path: '%s'\n" \
					   "$pgm" "$PWD"
			fi
			;;
		g)
			gen_all=1
			;;
		p)
			project=$OPTARG
			;;
		:)

			>&2 printf '%s: expected argument for  option -%s\n' \
			           "$pgm" "$opt"
			exit 1
			;;
		\?)
			>&2 printf '%s: unknown option -%s\n' \
				   "$pgm" "$OPTARG"
			exit 1
			;;
	esac
done

if test -z "$project"
then
	>&2 printf "Usage '%s' %s\n" "$pgm" "$usage"
	exit 1
fi

set -- /mnt/dksrv206/www/Portfolio/Admin/Services	\
       /mnt/dksrv206/www/dev/bas/shared/services

if ! test "$project" = "bas"
then
	set -- "$@" /mnt/dksrv206/www/dev/"$project"/customized/services
fi

for dir in "$@"
do
	gen_tags "$dir"
done
